name: Build Typst document

on:
  push:
    branches:
      - sources

jobs:
  build_typst:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: sources
          fetch-depth: 0

      - name: Debug Directory Contents
        run: |
          ls -R

      - name: Get all changed typst files
        id: changed-typst-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
             **.typ

      - name: End action if no changes
        if: steps.changed-typst-files.outputs.all_changed_files == ''
        run: echo "no changed files found, ending the job."


      - name: List all changed files typst files
        if: steps.changed-typst-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-typst-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      
      - name: Build Typst documents
        if: steps.changed-typst-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-typst-files.outputs.all_changed_files }}; do
            docker run -e "XDG_CACHE_HOME=/root" --user $(id -u):$(id -g) -v ${{ github.workspace }}:/root --rm ghcr.io/typst/typst:latest find "$(dirname $file)" -type f -name "$(basename $file)" -exec sh -c 'typst compile --root . "$1" && rm -rf typst/packages/preview/' _ {} \;
          done

      - name: Commit and push PDF files to documents branch
        if: steps.changed-typst-files.outputs.all_changed_files != ''
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add .
          git commit -m "Update PDF files [skip ci]"
          git fetch

          git checkout documents
          # Remove only the modified PDF files from the documents branch
          check=false
          for file in ${{ steps.changed-typst-files.outputs.all_changed_files }}; do
            # Extract the base name without the extension
            base_name=$(basename "$file" .typ)
            # Concatenate "pdf" to the base name and clear the version
            pdf_file=$(echo "$base_name" | awk -F '_v' '{print $1}')
            
            if (( $(git ls-files -- "**/$pdf_file*.pdf" | wc -l) > 0 )); then
              git rm -- **/"$pdf_file"*.pdf
              check=true
            fi
          done
          
          if $check; then
            git add .
            git commit -m "Delete existing documents [skip ci]"
            git push origin documents
          fi

          # Check out PDF files from the sources branch
          git checkout sources -- *.pdf

          # Add, commit, and push changes to the documents branch
          git add .
          git commit -m "Update PDF files [skip ci]"
          git push origin documents
